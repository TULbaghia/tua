version: "3.8"

services:
  mariadb:
    image: mariadb:10.7.1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: tua03
      MYSQL_USER: tua03
      MYSQL_PASSWORD: tua03
      MYSQL_ROOT_PASSWORD: tua03
    networks:
      - internal_db
    volumes:
      - ./mariadb/init:/docker-entrypoint-initdb.d:ro
      - ./mariadb/mysql:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-ptua03"]
      interval: 5s
      timeout: 30s
      retries: 5

  wildfly:
    build: ./wildfly
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - internal_db
      - internal_http
      - internal_metrics
    volumes:
      - ./wildfly/ssbd06.war:/opt/jboss/wildfly/standalone/deployments/ssbd06.war:ro
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080"]
      interval: 5s
      timeout: 30s
      retries: 5
#    ports:                     # development only
#      - "127.0.0.1:9990:9990"
#      - "127.0.0.1:8080:8080"

  prometheus:
    image: prom/prometheus:v2.31.1
    restart: unless-stopped
    depends_on:
      wildfly:
        condition: service_healthy
    networks:
      - internal_metrics
    volumes:
      - ./prometheus:/etc/prometheus
      - prometeus-storage:/var/lib/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
#    ports:                     # development only
#      - "127.0.0.1:9090:9090"

  grafana:
    image: grafana/grafana:8.2.4
    restart: unless-stopped
    depends_on:
      wildfly:
        condition: service_healthy
    networks:
      - internal_metrics
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "127.0.0.1:3000:3000"

  nginx:
    image: nginx:1.21.4
    restart: unless-stopped
    depends_on:
      wildfly:
        condition: service_healthy
    networks:
      - internal_http
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certificate.crt:/etc/ssl/private/certificate.crt:ro
      - ./nginx/private.key:/etc/ssl/private/private.key:ro
    ports:
      - "127.0.0.1:443:443"

volumes:
  grafana-storage:
  prometeus-storage:

networks:
  internal_db: {}
  internal_http: {}
  internal_metrics: {}
